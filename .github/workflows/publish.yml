name: Publish Docker image to private repository

on:
  push:
    branches:
      - main
  pull_request:
    branches:
        - main

env:
    CI: true
    Succeeded: ":white_check_mark: "
    REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
    SLACK_ICON: ":octocat:"
    SLACK_CHANNEL: "#tech-updates"
    SLACK_USERNAME: "Github Actions"
    SLACK_COLOR: "#de4e2b"
    SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
    SLACK_MESSAGE: "Error Publishing"
    SLACK_TITLE: ":heavy_multiplication_x:"
    SLACK_FOOTER: "<https://github.com/${{ github.repository }}/commit/${{ github.sha }}/checks|[caselist:main]>"
    MSG_MINIMAL: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set Docker Tag by commit
      id: get_version
      run: echo COMMIT_VERSION=$(echo $GITHUB_SHA) >> $GITHUB_ENV

    - name: Publish client image to Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: caselist-client
        username: ${{ secrets.REGSITRY_USER }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        registry: registry.speechanddebate.org
        tags: "${{ env.COMMIT_VERSION }}"
        context: client
    
    - name: Publish server image to Registry
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: caselist-server
        username: ${{ secrets.REGSITRY_USER }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        registry: registry.speechanddebate.org
        tags: "${{ env.COMMIT_VERSION }}"
        context: server
    
    - name: If image was published change SLACK_COLOR and SLACK_TITLE accordingly
      if: success()
      run: |
        echo "SLACK_COLOR=good" >> $GITHUB_ENV
        echo "SLACK_TITLE=${{ env.Succeeded }}" >> $GITHUB_ENV
        echo "SLACK_MESSAGE=Image Published" >> $GITHUB_ENV

    - name: Send slack notification
      uses: rtCamp/action-slack-notify@v2.1.0